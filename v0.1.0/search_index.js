var documenterSearchIndex = {"docs":
[{"location":"#ADoSnipsTemplate-1","page":"Introduction","title":"ADoSnipsTemplate","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"This is a template skill for the SnipsHermesQnD framework for Snips.ai written in Julia.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"To learn about Snips, goto snips.ai","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"To get introduced with Julia, see julialang.org","category":"page"},{"location":"#Similarities-and-differences-to-the-Hermes-dialogue-manager-1","page":"Introduction","title":"Similarities and differences to the Hermes dialogue manager","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"The framework allows for setting up skills/apps the same way as with the Python libraries. However, according to the more functional programming style in Julia, more direct interactions are provided and technical stuff (such as siteId, sessionId, callback-functions, etc.) are handled transparently by the framework in the background.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"As an example, the function listenIntentsOneTime() can be used without a callback-function. Recognised intent and payload are returned as function value.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"On top of listenIntentsOneTime(), SnipsHermesQnD comes with a simple question/answer methods to ask questions answered by Yes or No (askYesOrNo() and askYesOrNoOrUnknown()). As a result, it is possible to get a quick user-feedback without leaving the control flow of a function, like illustrated in this skill action:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"\"\"\"\nfunction destroyAction(topic, payload)\n\n    Initialise self-destruction.\n\"\"\"\nfunction destroyAction(topic, payload)\n\n  # log message:\n  println(\"- ADoSnipsDestroyYourself: action destroyAction() started.\")\n\n  if askYesOrNo(\"Do you really want to initiate self-destruction?\")\n    Snips.publishEndSession(\"Self-destruction sequence started!\")\n    boom()\n  else\n    Snips.publishEndSession(\"\"\"OK.\n                            Self-destruction sequence is aborted!\n                            Live long and in peace.\"\"\")\n  end\n\n  return true\nend","category":"page"},{"location":"snipsHermesQnD/#The-SnipsHermesQnD-framework-1","page":"SnipsHermesQnD","title":"The SnipsHermesQnD framework","text":"","category":"section"},{"location":"snipsHermesQnD/#Julia-1","page":"SnipsHermesQnD","title":"Julia","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"This template skill is (like the entire SnipsHermesQnD framework) written in the modern programming language Julia (because Julia is faster then Python and coding is much much easier and much more straight forward). However \"Pythonians\" often need some time to get familiar with Julia.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"If you are ready for the step forward, start here: https://julialang.org/","category":"page"},{"location":"snipsHermesQnD/#Installation-of-Julia-language-1","page":"SnipsHermesQnD","title":"Installation of Julia language","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Installation of Julia is simple:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"just download the tar-ball for your architecture (most probably Raspberry-Pi/arm).\nsave it in an appropriate folder (/opt/Julia/ might be a good idea).\nunpack it: tar -xvzf julia-<version>.tar.gz\nmake sure, that the julia executable is executable. You find it as /opt/Julia/julia-<version>/bin/julia. If it is not executable run chmod 755 /opt/Julia/julia-<version>/bin/julia\nAdd a symbolic link from a location which is in the search path, such as /usr/local/bin:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"All together:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"sudo chown $(whoami) /opt    \nmkdir /opt/Julia    \nmv ~/Downloads/julia-<version>.tar.gz .    \ntar -xvzf julia-<version>.tar.gz    \nchmod 755 /opt/Julia/julia-<version>/bin/julia    \ncd /usr/local/bin    \nsudo ln -s /opt/Julia/julia-<version>/bin/julia    ","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"... and you are done!","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"For a very quick get into, see   learn Julia in Y minutes.","category":"page"},{"location":"snipsHermesQnD/#IDEs-1","page":"SnipsHermesQnD","title":"IDEs","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Softwarte development is made comfortable by IDEs (Integrated Development Environements). For Julia, best choices include:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"My favourite is the Atom editor with the Juno package installed.\nVisual Studio Code also provides very good support for Julia.\nPlaying around and learning is best done with Jupyter notebooks. The Jupyter stack can be installed easily from the Julia REPL by adding the Package IJulia.","category":"page"},{"location":"snipsHermesQnD/#Noteworthy-differences-between-Julia-and-Python-1","page":"SnipsHermesQnD","title":"Noteworthy differences between Julia and Python","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Julia code looks very much like Python code, except of","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"there are no colons,\nwhitespaces have no meaning; blocks end with an end,\nsometimes types should be given explicitly.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"However Julia a typed language with all advantages; and code is run-time-compiled only once, with consequences:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"If a function is called for the first time, there is a time lack, because the compiler must finish his work before the actual code is executed.\nFuture function calls will use the compiled program, making Julia code execute as fast as compiled C-code!","category":"page"},{"location":"snipsHermesQnD/#Installation-1","page":"SnipsHermesQnD","title":"Installation","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The framework SnipsHermesQnD is currently not distributed as an individual package, because it is work-in-progress and will change continuously. In order to be sure, that existing skills/apps are not effected by changes of the framework, every skill brings its own version of SnipsHermesQnD with it.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"At some point in the future (when the framework is in a released state) this might change. But still existing skills will work.","category":"page"},{"location":"snipsHermesQnD/#Installation-of-the-framework-1","page":"SnipsHermesQnD","title":"Installation of the framework","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The framework needs not to be installed, because it is distributed with each skill (see above). However Eclipse modquitto must be installed. On a Raspberry Pi the packages mosquitto and mosquitto-clients are needed:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"sudo apt-get install mosquitto\nsudo apt-get install mosquitto-clients","category":"page"},{"location":"snipsHermesQnD/#App-ADoSnipsHermesQnD-1","page":"SnipsHermesQnD","title":"App ADoSnipsHermesQnD","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"To use skills, developped with SnipsHermesQnD, just add the ADoSnipsHermesQnD App to your assistant. There are versions in German and English language (ADoSnipsHermesQnD_DE and ADoSnipsHermesQnD_EN).","category":"page"},{"location":"snipsHermesQnD/#Adapt-timeouts-1","page":"SnipsHermesQnD","title":"Adapt timeouts","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"One major difference between the languages Python and Julia is that Julia is compiled only once at runtime with a compiler that produces highly optimised code.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"As a result, Julia code runs as fast as other compiled code, such as c code. The downside is the time necessary for compilation. Whereas Python scripts just run away when started (because the compile cost is averaged over the entire runtime), Julia functions need an extra time for compilation, when they are started for the first time.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"In consequence there is a time lack at the start of a Julia program; and for the same reason additional time is necessary when a function is executed for the first time.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Some things need to be considered to handle this in the Snips environement:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"When the Snips skill manager starts an assistant, the Julia apps will need up to 1 minute on a Rsapberry Pi until they are ready. When whatching the processes with top or htop, the Julia-processes are visible at the top with 100% CPU load. This is the compiler!\nThe settings for session_timeout and lambda_timeout in the Snips configuration file snips.toml should be set to a high value (such as 2 minutes) in order to keep a session alive until the app reacts the first time. This is only an issue when a function behind an intent is executed for the first time. Because Julia stores the compiled code, any subsequent call will be very fast.","category":"page"},{"location":"snipsHermesQnD/#Template-skill-1","page":"SnipsHermesQnD","title":"Template skill","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The template ADosnipsTemplate is already a fully functional skill. To test it, just add the ADoSnipsTemplate-skill to your assistant in the Snips console and update your assistant with sam (sam update-assistant). The skill is available in English and German and shows how the multi-language support of the framework works.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"During installation with sam you will be asked to confirm the settings in config.ini.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Please set the language to the laguage you need (currently en and de are supported)\nPlease give your assistant a name. The Skill will repeat the name, when activated in order to show the code necessary to access config.ini values.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The Template Skill includes the intent pleaseRepeat (as pleaseRepeatDE and pleaseRepeatEN) which allows to say things like:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"\"please repeat the word holydays\"\n\"please say: movie\"\n...","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"or in German:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"\"Bitte sprich mit nach: Auto\"\n\"Bitte sage: Kaffeemaschine\"\n...","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The app will repeat the word.","category":"page"},{"location":"snipsHermesQnD/#SnipsHermesQnD-details-1","page":"SnipsHermesQnD","title":"SnipsHermesQnD details","text":"","category":"section"},{"location":"snipsHermesQnD/#Strategy-1","page":"SnipsHermesQnD","title":"Strategy","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The idea behind the framework is, to put as much as possible in the background so that a developper only needs to provide the code for the functions executed for an intent.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The MQTT-messages of Hermes and the Dialogue Manager are wrapped, but additional interfaces to Hermes are provided to enable direct dialogues without using callbacks.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"In addion background information, such as current session-ID or current site-ID are mostly handled in the background and not exposed to a skill developper.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Additional utilities are provided to","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"read values from intent slots\nread values from config.ini\nwrite apps for more then one language\nget an answer form the NLU back as function value in the control flow of a function\nuse a global intent for switching a device on or off\nlet Snips ask a question and get \"yes\" or \"no\" back as boolean value\nlet Snips continue a conversation without the need to utter the hotword again.","category":"page"},{"location":"snipsHermesQnD/#Common-intent-for-on/off-1","page":"SnipsHermesQnD","title":"Common intent for on/off","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The on/off-intent, integrated with the SnipsHermesQnD framework, allows for writing apps to power up or down devices, without the need to create a new intent for every device.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Background: All home assistants run into problems when many intents are responsible to switch on or off a device. Obviously all these intends are very similar and it is not easy to always detect the correct intent and device.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"SnipsHermesQnD tries to work around this issue, by using only one intent for all on/off-commands.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"All supported devices are listed in the slot device of the intent AdoSnipsOnOff<EN/DE> and defined in the slot type device_Type.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The app ADoSnipsHermesQnD has some code behind to handle unrecognised devises. The associated config.ini defines a list of unhandled devices. If you want to use the intent to swich an additional device on or off","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"firstly look in the config.ini, if the device is already defined and in the list of unhandled devices. In this case just remove it from the list, and the your code will be executed if the command is recognised.\nsecondly, if the new device is not already in the list, you will have to create a fork of the intent and add a new device to the values of the slot type device_Type.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The framework comes with a function isOnOffMatched(payload, DEVICE_NAME) which can be called with the current payload and the name (and optionally with the siteId) of the device of interest. It will return one of","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":":on, if an \"ON\" is recognised for the device\n:off, if an \"OFF\" is recognised for the device\n:matched, if the device is recognised but no specific on or off\n:unmatched, if the device is not recognised.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The tutorial shows a simple example how to use this functionality.","category":"page"},{"location":"snipsHermesQnD/#Ask-and-answer-Yes-or-No-1","page":"SnipsHermesQnD","title":"Ask and answer Yes-or-No","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"An often needed functionality is a quick confirmation feedback of the user. This is provided by the framework function askYesOrNo(question).","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"See the following self-exlpaining code as example:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"\"\"\"\nfunction destroyAction(topic, payload)\n\n    Initialise self-destruction.\n\"\"\"\nfunction destroyAction(topic, payload)\n\n  # log message:\n  println(\"- ADoSnipsDestroyYourself: action destroyAction() started.\")\n\n  if askYesOrNo(\"Do you really want to initiate self-destruction?\")\n    Snips.publishEndSession(\"Self-destruction sequence started!\")\n    boom()\n  else\n    Snips.publishEndSession(\"\"\"OK.\n                            Self-destruction sequence is aborted!\n                            Live long and in peace.\"\"\")\n  end\n\n  return true\nend","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The intent to capture the user response comes with the framework and is activated just for this dialogue.","category":"page"},{"location":"snipsHermesQnD/#Continue-conversation-without-hotword-1","page":"SnipsHermesQnD","title":"Continue conversation without hotword","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Sometimes it is necessary to control a device with a sequence of several comands. In this case it is not natural to speak the hotword everytime. like:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"hey Snipsswitch on the lighthey Snipsdim the lighthey Snipsdim the light againhey Snipsdim the light again    ","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Instead, we want something like:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"hey Snipsswitch on the lightdim the lightdim the light againdim the light again    ","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"This can be achieved by starting a new session just after an intent is processed. In the SnipsHermesQnD framework this is controlled by two mechanisms:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The config.jl defines a constant const CONTINUE_WO_HOTWORD = true. true is the default and hence continuation without hotword is enabled by default. To completely disable it for your skill, just set the constant to false.     The second mechanism is the return value of every single skill-action. A new session will only be started if both are true, the constant CONTINUE_WO_HOTWORD and the return value of the function. This way it is possible to decide for each action individually, if a hotword is required for the next command.","category":"page"},{"location":"snipsHermesQnD/#Multi-language-support-1","page":"SnipsHermesQnD","title":"Multi-language support","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Multi-language skills need to be able to switch between laguages. In the context of Snips this requires special handling in two cases:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"All text, uttered by the assistant must be defined in all languages.\nAn intent is always tied to one language. Therefore for multi-language skills similar intents (with the same slots) must be created for each supported language.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"Multi-language support ist added in 4 steps:","category":"page"},{"location":"snipsHermesQnD/#)-Define-language-in-config.ini:-1","page":"SnipsHermesQnD","title":"1) Define language in config.ini:","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The config.ini must have a line like:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"language=en","category":"page"},{"location":"snipsHermesQnD/#)-Define-the-texts-in-all-languages:-1","page":"SnipsHermesQnD","title":"2) Define the texts in all languages:","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"To let Snips speak different languages, all texts must be defined in a Dictionary with unique keys. These are defined in the file languages.jl, as shown in the Template:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"TEXTS_DE = Dict(\n:iam => \"Ich bin dein Assistent $myName und ich soll sagen $word\",\n:bravo => \"Bravo, du hast erfolgreich das Template installiert!\",\n:noname => \"Ich finde keinen Namen in der config Datei!\",\n:dunno => \"Ich habe nicht verstanden was ich sagen soll!\"\n)\n\nTEXTS_EN = Dict(\n:iam => \"I am yor home assistant $myName and you told me to say $word\",\n:bravo => \"Bravo, you managed to install the template!\",\n:noname => \"My name is not configured in the config file!\",\n:dunno => \"I did not catch what you want me to say!\"\n)","category":"page"},{"location":"snipsHermesQnD/#)-Create-similar-intents-for-all-languages:-1","page":"SnipsHermesQnD","title":"3) Create similar intents for all languages:","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The most time-consuming step ist to create the intents in the Snips console - however this is necessary, because speach-to-text as well as natural language understanding highly depend on the language.","category":"page"},{"location":"snipsHermesQnD/#)-Switch-between-languages:-1","page":"SnipsHermesQnD","title":"4) Switch between languages:","text":"","category":"section"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The config.jl of the template app shows how switching languages is possible within SnipsHermesQnD:","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"const LANG = Snips.getIniLanguage() != nothing ? Snips.getIniLanguage() : \"en\"\n\n...\n\nif LANG == \"de\"\n    INTENT_ACTIONS = INTENT_ACTIONS_DE\n    TEXTS = TEXTS_DE\nelseif LANG == \"en\"\n    INTENT_ACTIONS = INTENT_ACTIONS_EN\n    TEXTS = TEXTS_EN\nelse\n    INTENT_ACTIONS = INTENT_ACTIONS_EN\n    TEXTS = TEXTS_EN\nend","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The first line tries to read the language from config.ini and sets it to the default if no definition is found.","category":"page"},{"location":"snipsHermesQnD/#","page":"SnipsHermesQnD","title":"SnipsHermesQnD","text":"The latter part selects the intents and texts to be used. A dictionary of texts is necessary for each language and a dictionary of intents is necessary for each language.","category":"page"},{"location":"makeskill/#How-to-write-a-new-skill-1","page":"New skill tutorial","title":"How to write a new skill","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"This brief tutorials guides through the process of making a new skill from this template in Julia language.","category":"page"},{"location":"makeskill/#Set-up-a-new-project-1","page":"New skill tutorial","title":"Set up a new project","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"To start with a new SnipsHermesQnD skill, just set up a new GitHub repository for the code of your skill (such as mySkill), get a clone of the GitHub project ADoSnipsTemplate and define your repo as remote for the local clone of the template.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"All file- and directory names can be left unchanged; however you may want to rename the project directory and the file action-ADoSnipsTemplate.jl to a name that identifies your new skill. The new name of the action-executable must start with action-, because the snips skill manager identifies executable apps by this naming convention:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"cd Documents\ncd SnipsSkills\ngit clone git@github.com:andreasdominik/ADoSnipsTemplate.git\n\nmv ADoSnipsTemplate mySkill\ncd mySkill/\nmv action-ADoSnipsTemplate.jl action-mySkill.jl\n\ngit rm action-ADoSnipsTemplate.jl\ngit add action-mySkill.jl\ngit status\ngit commit -m 'initial commit'\ngit remote set-url origin git@github.com:yourGitHubName/mySkill.git\ngit push origin master","category":"page"},{"location":"makeskill/#Files-in-the-template-1","page":"New skill tutorial","title":"Files in the template","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The template consists of several files, but only some of them need to be adapted for a new skill.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"filename comment needs to be adapted\napi.jl source code of Julia low-level API for a controlled device optional\ncallback.jl holds the callback, used in the background no\nconfig.jl global definitions for a skill yes\nlanguages.jl text fragments for multi-language support optional\nskill-actions.jl functions to be executed, if an intent is recognised yes\nSkill.jl the julia module for the skill no","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"In a minimum-setup only 2 things need to be adapted for a new skill:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"the action-functions which respond to an intent (the direct action, no callback) must be definded and implemented (skill-actions.jl)\nthe action-functions must be connected with the corresponding intent names (config.jl).","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"Optionally, more fine-grained software engineering is possible by","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"separating the user-interaction from the API of controlled devices (latter will go to api.jl)\nadding multi-language support, by specifying phrases in different languages (languages.jl) and by using different intents, depending on the language defined in config.ini.","category":"page"},{"location":"makeskill/#Example-with-low-level-API-1","page":"New skill tutorial","title":"Example with low-level API","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"This tutorial shows how a skill to control an external device can be derived from the template.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The idea is to control an Amazon fire stick with a minimum set of commands on, off, play, pause. More commands can be implement easily the same way.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"Switching on and off is implemented based on the common on-off-intent, included in the framework.","category":"page"},{"location":"makeskill/#The-Amazon-fire-low-level-API-1","page":"New skill tutorial","title":"The Amazon fire low-level API","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The low-level API which sends commands to the Amazon fire is borrowed from Matt's ADBee project (git@github.com:mattgyver83/adbee.git) that provides a shell-script to send commands to the Amazon device. Please read theer for the steps to prepare the Amazon device for the remote control via ADB.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"Although Python programmes usually find Python packages for every task, it is a very good idea to implement the lowest level af any device-control API as a shell script. Advantages:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"easy to write\nfast and without any overhead\neasy to test: the API canbe tested by just running the script from commandline as controlFire ON or controlFire OFF and see what happens.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The simplified ADBee-script is:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"#!/bin/bash -xv\n# control fireTv via adb\n\nCOMMANDS=$@\nIP=amazon-fire  # set to 192.168.1.200 by dhcp\nPORT=5555\nADB=adb\nSEND_KEY=\"$ADB -s $IP:$PORT shell input keyevent\"\n\nadb connect amazon-fire\n\nfor CMD in $COMMANDS ; do\n  case $CMD in\n    wake)\n      $SEND_KEY KEYCODE_WAKEUP\n      ;;\n    sleep)\n      $SEND_KEY KEYCODE_POWER\n      ;;\n    play)\n      $SEND_KEY KEYCODE_MEDIA_PLAY_PAUSE\n      ;;\n    pause)\n      $SEND_KEY KEYCODE_MEDIA_PLAY_PAUSE\n      ;;\n    # more commands may go here ...\n  esac\ndone","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"Once this script is tested, the Julia API can be set up.","category":"page"},{"location":"makeskill/#The-Julia-API-1","page":"New skill tutorial","title":"The Julia API","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"By default the API goes into the file api.jl, which is empty in the template.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"In this case only a wrapper is needed, to make the API-commands available in the Julia program. The framework provide a function tryrun() to execute external commands safely (i.e. if an error occures, the program will not crash, but reading the error message via Hermes text to speech).","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"This API definition splits in the function to execute the ADBee-script and functions to be called by the user:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"function adbCmds(cmds)\n\n    return tryrun(`$ADB $(split(cmds))`, errorMsg =\n            \"\"\"An error occured while sending commands $cmds\n            to Amazon fire.\"\"\"\nend\n\n\n\n\nfunction amazonON()\n    adbCmds(\"wake\")\nend\n\nfunction amazonOFF()\n    adbCmds(\"sleep\")\nend\n\nfunction amazonPlay()\n    adbCmds(\"play\")\nend\n\nfunction amazonPause()\n    adbCmds(\"pause\")\nend","category":"page"},{"location":"makeskill/#The-skill-action-for-on/off-1","page":"New skill tutorial","title":"The skill-action for on/off","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"This functions are executed by the framework if an intent is recognised. The functions are defined in the file skill-actions.jl. On/off is handled via the common on/off-intent, all other actions need a specific intent, that must be set up in the Snips console.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"\"\"\"\nfunction powerOnOff(topic, payload)\n\n    Power on or of with SnipsHermesQnD mechanism.\n\"\"\"\nfunction powerOnOff(topic, payload)\n\n    if isOnOffMatched(payload, DEVICE_NAME) == :on\n        Snips.publishEndSession(\"I wake up the Amazon Fire Stick.\")\n        amazonON()\n        return true\n\n    elseif isOnOffMatched(payload, DEVICE_NAME) == :off\n        Snips.publishEndSession(\"I send the Amazon Fire Stick to sleep.\")\n        amazonOFF()\n        return true\n\n    else\n        return false\n    end\nend","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"Returning false will disable the continue without hotword function; i.e. a hotword is necessary before the next command can be uttered. This is necessary for the default-case, because probably a different app will execute this non-recognised command.","category":"page"},{"location":"makeskill/#The-skill-action-for-all-other-commands-1","page":"New skill tutorial","title":"The skill-action for all other commands","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"All other commands must be handled by an intent that you must create in the Snips console. Let's assume the intent has the name ControlAmazon and delivers the command in the slot Command. The slot should know all known commands with synonyms.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"To handle this, a second skill-action has to be defined in the file skill-actions.jl:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"\"\"\"\nfunction commands(topic, payload)\n\n    Send commands to Amamzon device.\n\"\"\"\nfunction commands(topic, payload)\n\n    if Snips.isInSlot(payload, SLOT_NAME, \"play\")\n        Snips.publishEndSession(\"I play the current selection!\")\n        amazonPlay()\n        return true\n\n    elseif Snips.isInSlot(payload, SLOT_NAME, \"pause\")\n        Snips.publishEndSession(\"I pause the movie.\")\n        amazonPause()\n        return true\n\n    else\n        Snips.publishEndSession(\"I cannot respond!\")\n        return true\n    end\nend","category":"page"},{"location":"makeskill/#Tying-everything-together-1","page":"New skill tutorial","title":"Tying everything together","text":"","category":"section"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The last step is to tell the skill the names of intents to listen and the names of the slots to extract values from. Both is defined in the file config.jl:","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"The slot names are simply defined as global constants (they are global within the Module Skill).\nIntents and respective functions are stored in a Dictionary with the intent names as keys and the functions as values.","category":"page"},{"location":"makeskill/#","page":"New skill tutorial","title":"New skill tutorial","text":"const SLOT_NAME = \"Command\"\n\n...\n\nINTENT_ACTIONS = Dict{String, Function}()\nINTENT_ACTIONS[\"AdoSnipsOnOffEN\"] = powerOnOff\nINTENT_ACTIONS[\"ControlAmazon\"] = commands","category":"page"},{"location":"api/api/#API-documentation-1","page":"API Documentation","title":"API documentation","text":"","category":"section"},{"location":"api/api/#Hermes-functions-1","page":"API Documentation","title":"Hermes functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"These functions publish and subscribe to Hermes MQTT-topics.","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"subscribe2Intents\npublishStartSessionAction\npublishStartSessionNotification\npublishEndSession","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.subscribe2Intents","page":"API Documentation","title":"Main.SnipsHermesQnD.subscribe2Intents","text":"subscribe2Intents(intents, callback; moreTopics = nothing)\n\nSubscribe to one or a list of Intents and listen forever and run the callback if a matching intent is recieved.\n\nArguments:\n\nintents: Abstract String or List of Abstract Strings to define          intents to subscribe. The intents will be expanded          to topics (i.e. \"hermes/intent/SwitchOnLight\")\ncallback: Function to be executed for a incoming message\nmoreTopics: keyword arg to provide additional topics to subscribe           (complete names of of topics).\n\nDetails:\n\nThe callback function has the signature f(topic, intentMessage), where topic is a String and intentMessage a Dict{Symbol, Any} with the content of the payload (assuming, that the payload is in JSON-format) or a String, if the payload is not valid JSON. The callback function is not spawned, but executed in the current thread. As a result the function is not listening during execution of the callback.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.publishStartSessionAction","page":"API Documentation","title":"Main.SnipsHermesQnD.publishStartSessionAction","text":"publishStartSessionAction(text; siteId = CURRENT_SITE_ID,\n     intentFilter = nothing, sendIntentNotRecognized = false,\n     customData = nothing)\n\nMQTT publish start session with init action\n\nArguments:\n\nsiteId: ID of the session to be terminated as String\ntext: text to be said via TTS\nintentFilter: Optional Array of String - A list of intents names to               restrict the NLU resolution on the answer of this query.\nsendIntentNotRecognized: Optional Boolean -  Indicates whether the               dialogue manager should handle non recognized intents               by itself or sent them as an Intent Not Recognized for               the client to handle.\ncustomData: data to be sent to the service.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.publishStartSessionNotification","page":"API Documentation","title":"Main.SnipsHermesQnD.publishStartSessionNotification","text":"publishStartSessionNotification(text; siteId = CURRENT_SITE_ID,\n                                customData = nothing)\n\nMQTT publish start session with init notification\n\nArguments:\n\nsiteId: ID of the session to be terminated as String\ntext: text to be said via TTS\ncustomData: data to be sent to the service.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.publishEndSession","page":"API Documentation","title":"Main.SnipsHermesQnD.publishEndSession","text":"publishEndSession(text; sessionId = CURRENT_SESSION_ID)\n\nMQTT publish end session.\n\nArguments:\n\nsessionId: ID of the session to be terminated as String            If omiited, sessionId of the current will be inserted.\ntext: text to be said via TTS\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Dialogue-manager-functions-1","page":"API Documentation","title":"Dialogue manager functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"In addition to functions to work with the dialogue manager advanced direct dialogues are provided that can be included in the control flow of the program.","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"publishContinueSession\nlistenIntentsOneTime\nconfigureIntent\naskYesOrNoOrUnknown\naskYesOrNo\npublishSay","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.publishContinueSession","page":"API Documentation","title":"Main.SnipsHermesQnD.publishContinueSession","text":"publishContinueSession(text; sessionId = CURRENT_SESSION_ID,\n     intentFilter = nothing,\n     customData = nothing, sendIntentNotRecognized = false)\n\nMQTT publish continue session.\n\nArguments:\n\nsessionId: ID of the session to be terminated as String\ntext: text to be said via TTS\nintentFilter: Optional Array of String - A list of intents names to               restrict the NLU resolution on the answer of this query.\ncustomData: Optional String - an update to the session's custom data.\nsendIntentNotRecognized: Optional Boolean -  Indicates whether the               dialogue manager should handle non recognized intents               by itself or sent them as an Intent Not Recognized for               the client to handle.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.listenIntentsOneTime","page":"API Documentation","title":"Main.SnipsHermesQnD.listenIntentsOneTime","text":"listenIntentsOneTime(intents; moreTopics = nothing)\n\nSubscribe to one or a list of Intents, but listen only until one matching intent is recognised.\n\nArguments\n\nintents: Abstract String or List of Abtsract Strings to define          intents to subscribe or nothing\nmoreTopics: keyword arg to provide additional topics to subscribe,\n\nValue:\n\nReturn values are topic (as String) and payload (as Dict or as String if JSON parsing is not possible). If the topic is an intent, only the intent id is returned (i.e.: devname:intentname without the leading hermes/intent/)\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.configureIntent","page":"API Documentation","title":"Main.SnipsHermesQnD.configureIntent","text":"configureIntent(intent, on)\n\nEnable or disable an intent.\n\nArguments:\n\nintent: one intent to be configured\non: boolean value; if true, the intent is enabled; if false it is disabled.\n\n\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.askYesOrNoOrUnknown","page":"API Documentation","title":"Main.SnipsHermesQnD.askYesOrNoOrUnknown","text":"askYesOrNoOrUnknown(question)\n\nAsk the question and listen to the intent \"ADoSnipsYesNoDE\" and return :yes if \"Yes\" is answered or :no if \"No\" or :unknown otherwise.\n\nArguments:\n\nquestion: String with the question to be uttered by Snips\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.askYesOrNo","page":"API Documentation","title":"Main.SnipsHermesQnD.askYesOrNo","text":"askYesOrNo(question)\n\nAsk the question and listen to the intent \"ADoSnipsYesNoDE\" and return :true if \"Yes\" or \"No\" otherwise.\n\nArguments:\n\nquestion: String with the question to uttered\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.publishSay","page":"API Documentation","title":"Main.SnipsHermesQnD.publishSay","text":"publishSay(text; sessionId = CURRENT_SESSION_ID,\n                lang = nothing, id = nothing, wait = true)\n\nLet the TTS say something.\n\nArguments:\n\ntext: text to be said vie TTS\nlang: Optional language code to use when saying the text.       If nothing is provided, en will be used\nsessionId: optional ID of the session if there is one\nid: optional A request identifier. If provided, it will be passed back     in the response on hermes/tts/sayFinished.\nwait: wait until the massege is spoken (i.i. wait for the       MQTT-topic)\n\n\n\n\n\n","category":"function"},{"location":"api/api/#config.ini-functions-1","page":"API Documentation","title":"config.ini functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"Helper functions for read values from the file config.ini.","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"config.ini files follow the normal rules as for all Snips apps, with one extension:","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"no spaces around the =\nif value of the parameter (right side) includes commas, the value can be interpreted as a comma-separated list of values. In this case, the reader-function will return an array of Strings with the values (which an be accessed by their index).","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"readConfig\nmatchConfig\ngetConfig\nisInConfig\ngetAllConfig","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.readConfig","page":"API Documentation","title":"Main.SnipsHermesQnD.readConfig","text":"readConfig(appDir)\n\nRead the lines of the App's config file and return a Dict with config values.\n\nArguments:\n\nappDir: Directory of the currently running app.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.matchConfig","page":"API Documentation","title":"Main.SnipsHermesQnD.matchConfig","text":"matchConfig(name::Symbol, val::String)\n\nReturn true if the parameter with name name of the config.ini has the value val or one element of the list as the value val.\n\nArguments:\n\nname: name of the config parameter as Symbol\nval: desired value\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.getConfig","page":"API Documentation","title":"Main.SnipsHermesQnD.getConfig","text":"getConfig(name)\n\nReturn the parameter value of the config.ini with name or nothing if the param does not exist. Return value is of type AbstractString, if it is a single value or of type AbstractArray{AbstractString} if the a list of values is read.\n\nArguments:\n\nname: name of the config parameter as Symbol or String\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.isInConfig","page":"API Documentation","title":"Main.SnipsHermesQnD.isInConfig","text":"isInConfig(name::Symbol)\n\nReturn true if a parameter with name exists.\n\nArguments:\n\n* `name`: name of the config parameter as Symbol\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.getAllConfig","page":"API Documentation","title":"Main.SnipsHermesQnD.getAllConfig","text":"getAllConfig()\n\nReturn a Dict with the complete config.ini.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Slot-access-functions-1","page":"API Documentation","title":"Slot access functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"Functions to read values from slots of recognised intents.","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"extractSlotValue\nisInSlot\nisOnOffMatched","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.extractSlotValue","page":"API Documentation","title":"Main.SnipsHermesQnD.extractSlotValue","text":"extractSlotValue(payload, slotName; multiple = false)\n\nReturn the value of a slot.\n\nNothing is returned, if\n\nno slots in payload,\nno slots with name slotName in payload,\nno values in slot slotName.\n\nIf multiple == true, a list of all slot values will be returned. If false, only the 1st one as String.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.isInSlot","page":"API Documentation","title":"Main.SnipsHermesQnD.isInSlot","text":"isInSlot(payload, slotName, value)\n\nReturn true, if the value is present in the slot slotName of the JSON payload (i.e. one of the slot values must match). Return false if something is wrong (value not in payload or no slots slotName.)\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.isOnOffMatched","page":"API Documentation","title":"Main.SnipsHermesQnD.isOnOffMatched","text":"isOnOffMatched(payload, deviceName; siteId = CURRENT_SITE_ID)\n\nAction to be combined with the ADoSnipsOnOFF intent. Depending on the payload the function returns:\n\n:on if \"on\"\n:off if \"off\"\n:matched, if the device is matched but no on or off\n:unmatched, if one of\nwrong siteId\nwrong device\n\nArguments:\n\npayload: payload of intent\nsiteId: siteId of the device to be matched with the payload of intent\ndeviceName : name of device to be matched with the payload of intent\n\n\n\n\n\n","category":"function"},{"location":"api/api/#MQTT-functions-1","page":"API Documentation","title":"MQTT functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"Low-level API to MQTT messages (publish and subscribe). In the QuickAndDirty framework, these functions are calling Eclipse mosquitto_pub and mosquitto_sub. However this first (and preliminary) implementation is surpriningly robust and easy to maintain - it seems there is no need to change.","category":"page"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"subscribeMQTT\nreadOneMQTT\npublishMQTT","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.subscribeMQTT","page":"API Documentation","title":"Main.SnipsHermesQnD.subscribeMQTT","text":"subscribeMQTT(topics, callback; hostname = nothing, port = nothing)\n\nListen to one or more topics.\n\nArguments\n\ntopics: Abstract String or List of Abtsract Strings to define         topics to subscribe\ncallback: Function to be executed for a incoming message.\nhostname:\nport:     Hostname and port to listen. If not specified           mosquitto_sub will be called without hostname/port           (use the default configuration of the system).\n\nDetails:\n\nThe callback function has the signature f(topic, payload), where topic is a String and payload a Dict{Symbol, Any} with the content of the payload (assuming, that the payload is in JSON-formate) or a String, if the payload is not valid JSON.\n\nThe callback function is not spawned, but executed in the current thread. As a result the function is not listening during execution of the callback.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.readOneMQTT","page":"API Documentation","title":"Main.SnipsHermesQnD.readOneMQTT","text":"readOneMQTT(topics; hostname = nothing, port = nothing)\n\nListen to one or more topics until one message is retrieved and return topic as string and payload as Dict or as String if JSON parsing is not possible).\n\nArguments\n\ntopics: Abstract String or List of Abtsract Strings to define         topics to subscribe\nhostname:\nport:     Hostname and port to listen. If not specified           mosquitto_sub will be called without hostname/port           (use the default configuration of the system).\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.publishMQTT","page":"API Documentation","title":"Main.SnipsHermesQnD.publishMQTT","text":"publishMQTT(topic, payload, hostname = nothing, port = nothing)\n\nPublishe a MQTT message.\n\nArguments\n\ntopics: String with the topic\npayload: Dict() with message\nhostname:\nport:     Hostname and port to use. If not specified           mosquitto_sub will be called without hostname/port           (use the default configuration of the system).\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Utility-functions-1","page":"API Documentation","title":"Utility functions","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"Little helpers to provide functionality whichis commonly needed when develloping a skill.","category":"page"},{"location":"api/api/#Handle-siteId-from-recognised-intent-1","page":"API Documentation","title":"Handle siteId from recognised intent","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"setSiteId\ngetSiteId\nsetSessionId\ngetSessionId","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.setSiteId","page":"API Documentation","title":"Main.SnipsHermesQnD.setSiteId","text":"setSiteId(siteId)\n\nSet the siteId in the Module SnipsHermesQnD (necessary to direct the say() output to the current room)\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.getSiteId","page":"API Documentation","title":"Main.SnipsHermesQnD.getSiteId","text":"getSiteId()\n\nReturn the siteId in the Module SnipsHermesQnD (necessary to direct the say() output to the current room)\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.setSessionId","page":"API Documentation","title":"Main.SnipsHermesQnD.setSessionId","text":"setSessionId(sessionId)\n\nSet the sessionId in the Module SnipsHermesQnD. The sessionId will be used to publish Hermes messages inside a runing session. The framework handles this in the background.\n\nArguments:\n\nsessionId: as String from a Hermes payload.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.getSessionId","page":"API Documentation","title":"Main.SnipsHermesQnD.getSessionId","text":"getSessionId()\n\nReturn the sessionId of the currently running session.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Other-Utils-1","page":"API Documentation","title":"Other Utils","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"setLanguage\nreadableDateTime\ntryrun\ntryReadTextfile\ntryParseJSONfile\ntryParseJSON\ntryMkJSON\nsetGPIO","category":"page"},{"location":"api/api/#Main.SnipsHermesQnD.setLanguage","page":"API Documentation","title":"Main.SnipsHermesQnD.setLanguage","text":"setLanguage(lang)\n\nSet the default language for SnipsHermesQnD. Currently supported laguages are \"en\" and \"de\".\n\nThis will affect publishSay() and all system messages. Log-messages will always be in English.\n\nArguments\n\nlang: one of \"en\" or \"de\".\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.readableDateTime","page":"API Documentation","title":"Main.SnipsHermesQnD.readableDateTime","text":"function readableDateTime(datetime::AbstractString; lang = LANG)\nfunction readableDateTime(datetime::DateTime; lang = LANG)\n\nReturn human readable date and time, like \"Friday, 1. January 2018\",  \"9 15\"\n\nSupported languages: \"en\", \"de\", \"fr\".\n\nArguments:\n\ndatetime: date and optional time as ISO string or as DateTime object.\nlang: Language code (e.g. \"en\" or \"de\")\nwholeDay: boolean, if true, no time is returned, instead \"whole day\"\n\nValue:\n\nString value with readable date and time.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.tryrun","page":"API Documentation","title":"Main.SnipsHermesQnD.tryrun","text":"tryrun(cmd; wait = true, errorMsg = TEXTS[:error_script])\n\nTry to run an external command and returns true if successful or false if not.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.tryReadTextfile","page":"API Documentation","title":"Main.SnipsHermesQnD.tryReadTextfile","text":"tryReadTextfile(fname, errMsg = TEXTS[:error_read])\n\nTry to read a text file from file system and return the text as String or an String of length 0, if something went wrong.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.tryParseJSONfile","page":"API Documentation","title":"Main.SnipsHermesQnD.tryParseJSONfile","text":"tryParseJSONfile(fname)\n\nParse a JSON file and return a hierarchy of Dicts with the content.\n\nkeys are changed to Symbol\nif error, nothing is returned\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.tryParseJSON","page":"API Documentation","title":"Main.SnipsHermesQnD.tryParseJSON","text":"tryParseJSON(text)\n\nparses a JSON and returns a hierarchy of Dicts{Symbol, Any} and Arrays with the content or a string (text), if text is not a valid JSON string is returned.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.tryMkJSON","page":"API Documentation","title":"Main.SnipsHermesQnD.tryMkJSON","text":"tryMkJSON(payload)\n\nCreate a JSON representation of the input (nested Dict or Array) and return an empty string if not possible.\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Main.SnipsHermesQnD.setGPIO","page":"API Documentation","title":"Main.SnipsHermesQnD.setGPIO","text":"setGPIO(gpio, onoff::Symbol)\n\nSwitch a GPIO on or off.\n\nArguments:\n\ngpio: ID of GPIO (not pinID)\nonoff: one of :on or :off\n\n\n\n\n\n","category":"function"},{"location":"api/api/#Index-1","page":"API Documentation","title":"Index","text":"","category":"section"},{"location":"api/api/#","page":"API Documentation","title":"API Documentation","text":"","category":"page"},{"location":"LICENSE/#","page":"License","title":"License","text":"This template and the SnipsHermesQnD framework is copyright (C)","category":"page"},{"location":"LICENSE/#","page":"License","title":"License","text":"Andreas Dominik, THM Gießen, Germany, May 2019","category":"page"},{"location":"LICENSE/#","page":"License","title":"License","text":"and licensed under the GPL3 license:","category":"page"},{"location":"LICENSE/#","page":"License","title":"License","text":"                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                        PreambleThe GNU General Public License is a free, copyleft license for software and other kinds of works.The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software.  For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.The precise terms and conditions for copying, distribution and modification follow.                   TERMS AND CONDITIONSDefinitions.\"This License\" refers to version 3 of the GNU General Public License.\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.A \"covered work\" means either the unmodified Program or a work based on the Program.To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.Source Code.The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.The Corresponding Source for a work in source code form is that same work.Basic Permissions.All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.Protecting Users' Legal Rights From Anti-Circumvention Law.No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.Conveying Verbatim Copies.You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.Conveying Modified Source Versions.You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.Conveying Non-Source Forms.You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.Additional Terms.\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.Termination.You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.Acceptance Not Required for Having Copies.You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.Automatic Licensing of Downstream Recipients.Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.Patents.A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.No Surrender of Others' Freedom.If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.Use with the GNU Affero General Public License.Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.Revised Versions of this License.The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.Disclaimer of Warranty.THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.Limitation of Liability.IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.Interpretation of Sections 15 and 16.If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.Also add information on how to contact you by electronic and paper mail.If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:<program>  Copyright (C) <year>  <name of author>\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate parts of the General Public License.  Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\".You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/.The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read https://www.gnu.org/licenses/why-not-lgpl.html.","category":"page"}]
}
